import trenes.*
import vagones.*
import deposito.*

describe "trenes" {
	
    var vagonDePasajeros1 = new VagonDePasajeros(largoDeVagon =2, anchoDeVagon =2)
	var vagonDePasajeros2 = new VagonDePasajeros(largoDeVagon =7, anchoDeVagon =5)
	var vagonDePasajeros3 = new VagonDePasajeros(largoDeVagon =3, anchoDeVagon =3)
	
	
	var vagonDeCarga1 = new VagonDeCarga(cargaMaxima = 1500)
	var vagonDeCarga2 = new VagonDeCarga(cargaMaxima = 2000)
	
	var locomotora1 = new Locomotora(pesoMaximo = 1000, pesoMaximoQuePuedeArrastrar = 3000, velocidadMaxima = 2000)
	var locomotora2 = new Locomotora(pesoMaximo = 1300, pesoMaximoQuePuedeArrastrar = 5000, velocidadMaxima = 1000)
	
	var formacion = new Formacion(vagones = [vagonDePasajeros1,vagonDeCarga1],
		                          locomotoras = [locomotora1])
	
	var formacion1 = new Formacion(vagones = [vagonDePasajeros1,vagonDeCarga2],
		                          locomotoras = [locomotora2])
	
	var formacion2 = new Formacion(vagones = [vagonDeCarga2,vagonDePasajeros3],
		                          locomotoras = [locomotora1,locomotora2])
		                          
	var deposito1 = new Deposito( locomotorasSueltas = [] , formacionesArmadas = [formacion,formacion1,formacion2] )
		                        
		                                                    	                          
	test "vagonMasPesadoPorFormacion" {
		assert.equals(#{vagonDeCarga1,vagonDeCarga2,vagonDePasajeros3},deposito1.vagonMasPesadoPorFormacion())
	}	                          
		                          
	test "necesitaConductor" {
		assert.notThat(deposito1.necesitaConductorExperimentado())
	}
		                                    
    test "vagonesLivianos" {
   	 assert.equals(2,formacion.vagonesLivianos())
   }
   
    test "esEficiente "{
     assert.equals(false, formacion.esEficiente())
    }

    test "puedeMoverse"{
      assert.equals(false, formacion.puedeMoverse())	
    }
    
    test "agregarLocomotoraAFormacion" {
    	deposito1.agregarLocomotoraAFormacion(formacion2)
	    assert.equals(2, formacion2.locomotoras().size())    	
    }
    
    test "velocidadMaxima" {
    	assert.equals(1000, formacion2.velocidadMaxima())
    }
    
    test "kilosDeEmpujeQueFaltan" {
    	assert.equals(0, formacion2.kilosDeEmpujeQueFaltan())
    }
    
    test "hayUnBa√±oCada50Pasajeros" {
    	assert.notThat(formacion1.hayUnBanioCada50Pasajeros())
    }
    
}